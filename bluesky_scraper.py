# -*- coding: utf-8 -*-
"""bluesky_scraper

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vbhjzMaVJNwjz6yn8HdIXFlLDPJE37k3
"""

import os
from atproto import Client
import pandas as pd

bsky_username = os.getenv("BSKY_USERNAME")
bsky_password = os.getenv("BSKY_PASSWORD")

client = Client()
client.login(bsky_username, bsky_password)

# 2. Keywords
job_keywords = [
    "research assistant",
    "research coordinator",
    "lab coordinator",
    "postbac",
    "post-baccalaureate"
]
field_keywords = [
    "psychiatry",
    "psychology",
    "neuroscience",
    "mental health"
]
location_keywords = [
    "nyc", "new york", "brooklyn", "manhattan", "queens", "bronx",
    "jersey city", "hoboken", "staten island", "remote", "hybrid"
]
priority_institutions = [
    "nyu", "langone", "mount sinai", "fordham", "cuny"
]

# 3. Search Bluesky
results = []
for job in job_keywords:
    for field in field_keywords:
        search_term = f"{job} {field}"
        feed = client.app.bsky.feed.search_posts({"q": search_term, "limit": 50})
        for post in feed.posts:
            text_lower = post.record.text.lower()
            if any(loc in text_lower for loc in location_keywords):
                results.append({
                    "search_term": search_term,
                    "author": post.author.handle,
                    "text": post.record.text,
                    "url": f"https://bsky.app/profile/{post.author.handle}/post/{post.uri.split('/')[-1]}",
                    "created_at": post.record.created_at
                })

df = pd.DataFrame(results).drop_duplicates(subset=["url"])

# 4. Split into priority + other
priority_df = df[df["text"].str.lower().str.contains('|'.join(priority_institutions))]
other_df = df[~df["text"].str.lower().str.contains('|'.join(priority_institutions))]

# 5. Save Excel with two sheets
with pd.ExcelWriter("bluesky_jobs_sorted.xlsx") as writer:
    priority_df.to_excel(writer, sheet_name="priority", index=False)
    other_df.to_excel(writer, sheet_name="other", index=False)

print(f"Saved {len(priority_df)} priority results and {len(other_df)} other results to bluesky_jobs_sorted.xlsx")
